// This is your Prisma schema file,
// learn more about it in the docs https//pris.ly/d/prisma-schema 

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Level {
  user
  admin
}

model User {
  id              Int           @id @default(autoincrement())
  email           String        @unique
  name            String        @unique
  password        String
  avatar          String?       @default("default_avatar.png")
  level           Level         @default(user)
  managedDialects UserDialect[]
}

enum Role {
  owner
  editor
  viewer
}

model UserDialect {
  id        Int     @id @default(autoincrement())
  userId    Int
  dialectId Int
  role      Role // 角色可以是 "owner", "editor", "viewer" 等
  user      User    @relation(fields: [userId], references: [id])
  dialect   Dialect @relation(fields: [dialectId], references: [id])

  @@unique([userId, dialectId])
}

model Dialect {
  id             Int             @id @default(autoincrement())
  name           String          @unique
  introduction   String?
  longitude      String?
  latitude       String?
  pronunciations Pronunciation[]
  managers       UserDialect[]
}

model Character {
  codePoint      Int             @id @unique
  chineseChar    String
  picture        String?
  pronunciations Pronunciation[]
}

model Pronunciation {
  id                 Int           @id @default(autoincrement())
  phonetic           String // 音标
  initials           String? // 声母
  finals             String? // 韵母
  tone               String? // 声调
  dialectId          Int
  characterCodePoint Int // Character 的 codePoint 作为外键
  dialect            Dialect       @relation(fields: [dialectId], references: [id], onDelete: Cascade)
  character          Character     @relation(fields: [characterCodePoint], references: [codePoint])
  explanations       Explanation[]
}

model Explanation {
  id                   Int           @id @default(autoincrement())
  description          String
  wordFormation        String?
  sentenceConstruction String?
  pronunciationId      Int
  pronunciation        Pronunciation @relation(fields: [pronunciationId], references: [id], onDelete: Cascade)
}
